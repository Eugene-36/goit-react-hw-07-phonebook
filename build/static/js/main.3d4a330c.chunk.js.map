{"version":3,"sources":["redux/actions/userActions.js","redux/actions/create-user.js","components/Form/Form.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","redux/reducers/allUsersReducer.js","redux/store.js","index.js"],"names":["createAction","user","payload","name","number","id","addUser","deleteUser","changeFilter","Form","loginInputId","shortid","generate","numberInputId","objId","state","handleChange","event","setState","unId","currentTarget","value","handleSubmit","e","preventDefault","props","y","reset","onSubmit","this","htmlFor","placeholder","type","onChange","Component","mapDispatchToProps","addUserAction","connect","allUsers","filter","dispatch","filterUser","target","className","filterContacts","allContacts","console","log","normalizedFilter","toLocaleLowerCase","toLowerCase","includes","onDelete","actions","contacts","map","onClick","App","createReducer","ADD_USER","DELET_USER","elem","_","combineReducers","middleware","storage","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","todosPersistConfig","key","blacklist","store","configureStore","reducer","persistReducer","todosReducer","persistor","persistStore","ReactDOM","render","loading","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3d4a330c.chunk.js","sourcesContent":["import { number } from \"prop-types\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst addUser = createAction(\"ADD_USER\");\r\n\r\nconst deleteUser = createAction(\"DELET_USER\");\r\n\r\nconst changeFilter = createAction(\"CHANGE_FILTER\");\r\n\r\nexport default { addUser, deleteUser, changeFilter };\r\n","import { number } from \"prop-types\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\nconst createUser = createAction(\"actions/create_User\", (user) => {\r\n  return {\r\n    payload: {\r\n      name: user.name,\r\n      number: user.number,\r\n      id: user.id,\r\n    },\r\n  };\r\n});\r\n\r\nexport default createUser;\r\n","import { Component } from \"react\";\r\nimport shortid from \"shortid\";\r\nimport s from \"./Form.module.css\";\r\nimport { v4 as unId } from \"uuid\";\r\n\r\n//todo:\r\nimport { connect } from \"react-redux\";\r\nimport userAction from \"../../redux/actions/create-user\";\r\nimport addUserAction from \"../../redux/actions/userActions\";\r\nclass Form extends Component {\r\n  loginInputId = shortid.generate();\r\n  numberInputId = shortid.generate();\r\n  objId = shortid.generate();\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n    id: \"\",\r\n  };\r\n  handleChange = (event) => {\r\n    // console.log(event.currentTarget);\r\n    // console.log(event.currentTarget.name);\r\n    // console.log(event.currentTarget.value);\r\n\r\n    this.setState({\r\n      id: unId(),\r\n      [event.currentTarget.name]: event.currentTarget.value,\r\n    });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    //todo: редакс передал создание нового юзера\r\n    if (this.state.name !== \"\") {\r\n      this.props.y(this.state);\r\n      this.reset();\r\n      return;\r\n    }\r\n  };\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label htmlFor={this.loginInputId}>\r\n          <input\r\n            placeholder=\"Name\"\r\n            name=\"name\"\r\n            type=\"text\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n            id={this.loginInputId}\r\n          />\r\n        </label>\r\n\r\n        <label htmlFor={this.numberInputId}>\r\n          <br />\r\n\r\n          <input\r\n            placeholder=\"Number\"\r\n            name=\"number\"\r\n            type=\"text\"\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n            id={this.numberInputId}\r\n          />\r\n        </label>\r\n        <br />\r\n\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  y: addUserAction.addUser,\r\n};\r\nexport default connect(null, mapDispatchToProps)(Form);\r\n","import React, { Component } from \"react\";\r\n\r\nimport filterUser from \"../../redux/actions/userActions\";\r\nimport { connect } from \"react-redux\";\r\n\r\n//console.log(props);\r\nconst Filter = ({ value, onChange }) => {\r\n  //console.log(value);\r\n  // const { value, onChange } = this.props;\r\n  // console.log(value);\r\n  return (\r\n    <div>\r\n      <label>\r\n        Find contacts by name\r\n        <input\r\n          type=\"text\"\r\n          className=\"TodoFilter__input\"\r\n          value={value}\r\n          onChange={onChange}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: state.allUsers.filter,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onChange: (e) => dispatch(filterUser.changeFilter(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from \"react\";\r\nimport { v4 as unId } from \"uuid\";\r\nimport Contacts from \"./Contacts.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport actions from \"../../redux/actions/userActions\";\r\n// import actions from \"../../redux/actions/userActions\";\r\nconst ContactList = ({ allUsers, onDelete }) => (\r\n  <ul className=\"TodoList\">\r\n    {allUsers.map(({ id, name, number }) => (\r\n      <li key={unId()} className=\"listStyle\">\r\n        <p className=\"TodoList__text\">\r\n          {name}:{number}\r\n        </p>\r\n        <button\r\n          type=\"button\"\r\n          className=\"TodoList__btn\"\r\n          onClick={() => onDelete(id)}\r\n        >\r\n          Remove\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nconst filterContacts = (allContacts, filter) => {\r\n  console.log(filter);\r\n  const normalizedFilter = filter.toLocaleLowerCase();\r\n  return allContacts.filter(({ name }) =>\r\n    name.toLowerCase().includes(normalizedFilter)\r\n  );\r\n};\r\nconsole.log(filterContacts);\r\n\r\n//const mapStateToProps = (store) => ({ allUsers: store.allUsers });\r\nconst mapStateToProps = ({ allUsers: { contacts, filter } }) => ({\r\n  allUsers: filterContacts(contacts, filter),\r\n  //console.log(filter, contacts);\r\n});\r\n// const mapStateToProps = (allUsers) => console.log(allUsers.allUsers);\r\n\r\nconst mapDispatchToProps = {\r\n  onDelete: (id) => actions.deleteUser(id),\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import { Component } from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport Form from \"./components/Form/Form\";\r\nimport Filter from \"./components/Filter/Filter\";\r\nimport ContactList from \"./components/ContactList/ContactList\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div>\r\n          <h1>Phonebook</h1>\r\n          <Form />\r\n          <h2>Contacts</h2>\r\n          <Filter />\r\n          <ContactList />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport actions from \"../actions/userActions\";\r\nconst contacts = createReducer([], {\r\n  ADD_USER: (state, { payload }) => [...state, payload],\r\n  DELET_USER: (state, { payload }) =>\r\n    state.filter((elem) => elem.id !== payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\nimport todosReducer from \"../redux/reducers/allUsersReducer\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst persistConfig = {\r\n  key: \"contacts\",\r\n  storage,\r\n};\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\nconst todosPersistConfig = {\r\n  key: \"contacts\",\r\n  storage,\r\n  blacklist: [\"filter\"],\r\n};\r\nconst store = configureStore({\r\n  reducer: {\r\n    allUsers: persistReducer(todosPersistConfig, todosReducer),\r\n  },\r\n  middleware,\r\n});\r\n\r\nconst persistor = persistStore(store);\r\nexport default { store, persistor };\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport store from \"./redux/store.js\";\r\nReactDOM.render(\r\n  <Provider store={store.store}>\r\n    <PersistGate loading={null} persistor={store.persistor}>\r\n      <React.StrictMode>\r\n        <App />\r\n      </React.StrictMode>\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}